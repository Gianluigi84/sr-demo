<launch>
  <node pkg="dynamic_reconfigure" type="dynparam" name="dynparam" args="set /camera/driver depth_registration true" />

  <node pkg="tf" type="static_transform_publisher" name="base_link_to_fixed" args="0.4 0.4 -1.2 0.0 0.0 0.0 /base_link /fixed 100" />

  <node pkg="tf" type="static_transform_publisher" name="base_to_kinect"
    args="0.135267425678 -0.657307250967 0.422487803114 -0.116164298781 0.154158279333 0.629092064457 0.752816847808 /base_link /camera_link 100"/>


  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/re_kinect/feature_pcl" />
    <remap from="~output" to="/re_kinect/feature_pcl/filtered" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.01
      filter_limit_max: 1.5
      filter_limit_negative: False
      leaf_size: 0.01
    </rosparam>
  </node>

  <node name="cluster_bounding_box_finder" pkg="object_manipulator"
	type="cluster_bounding_box_finder_server.py"
	output="screen"
	respawn="false">
  </node>

  <node pkg="sr_grasp_planner" type="sr_grasp_planner" name="sr_grasp_planner" output="screen" />

  <include file="$(find denso_arm)/launch/denso_arm.launch"/>

  <node pkg="sr_move_arm" type="hand_posture_execution" name="hand_posture_execution" output="screen" />

</launch>
